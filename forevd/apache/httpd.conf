LoadModule unixd_module modules/mod_unixd.so
LoadModule log_config_module modules/mod_log_config.so

LoadModule rewrite_module modules/mod_rewrite.so
LoadModule headers_module modules/mod_headers.so

LoadModule mpm_event_module modules/mod_mpm_event.so

LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authz_core_module modules/mod_authz_core.so

LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so

{% if cert -%}
LoadModule ssl_module modules/mod_ssl.so
LoadModule socache_shmcb_module modules/mod_socache_shmcb.so
{% endif %}
{% if oidc -%}
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule auth_openidc_module modules/mod_auth_openidc.so
{% endif %}

ServerName {{ server_name }}
Listen {{ listen }}

UseCanonicalName On

Timeout 10
MaxRequestWorkers 100

{% if debug %}
LogLevel debug
TraceEnable Off
{% else %}
LogLevel info
{% endif %}

ErrorLog {{ err_log }}
CustomLog {{ access_log }} common

Mutex posixsem

{% raw %}
ErrorLogFormat "[%{cu}t] [%-m:%-l] %-a %-L %M"
LogFormat "%h %l %u [%{%Y-%m-%d %H:%M:%S}t.%{usec_frac}t] \"%r\" %>s %b \ \"%{Referer}i\" \"%{User-Agent}i\"" combined
{% endraw %}

{% if cert -%}
SSLEngine on
SSLCipherSuite ALL:!EXP:!eNULL:!aNULL:!MD5:-LOW:-RC4:-SSLv2:+HIGH:+MEDIUM
SSLVerifyDepth 5
SSLProtocol -all +TLSv1.2
SSLSessionCache "shmcb:/usr/local/apache2/logs/ssl_scache(512000)"
SSLSessionCacheTimeout 300

SSLCACertificateFile conf/certs/ca/ca-cert.pem
SSLCertificateChainFile conf/certs/ca/ca-cert.pem
SSLCertificateFile conf/certs/erick-pro.jeb.ca.crt
SSLCertificateKeyFile conf/certs/erick-pro.jeb.ca.key
{% endif %}

{% if oidc -%}
OIDCProviderMetadataURL {{ oidc["provider_metadata_url"] }}
OIDCClientID {{ oidc["client_id"] }}
OIDCClientSecret {{ oidc["client_secret"] }}
{% if oidc["provider_issuer"] -%}
OIDCProviderIssuer {{ oidc["provider_issuer"] }}
{% endif -%}
{% if oidc["provider_authz_endpoint"] -%}
OIDCProviderAuthorizationEndpoint {{ oidc["provider_authz_endpoint"] }}
{% endif -%}
{% if oidc["provider_token_endpoint"] -%}
OIDCProviderTokenEndpoint {{ oidc["provider_token_endpoint"] }}
{% endif -%}
{% if oidc["provider_token_auth_endpoint"] -%}
OIDCProviderTokenEndpointAuth {{ oidc["provider_token_auth_endpoint"] }}
{% endif -%}
{% if oidc["provider_user_info_endpoint"] -%}
OIDCProviderUserInfoEndpoint {{ oidc["provider_user_info_endpoint"] }}
{% endif -%}
# OIDCRedirectURI is a vanity URL that must point to a path protected by this module but must NOT point to any content
OIDCRedirectURI {% if oidc["redirect_uri"] %}{{ oidc["redirect_uri"] }}{% else %}https://{{ server_name }}/secure/redirect_uri{% endif %}

OIDCCryptoPassphrase {% if oidc["crypto_passphrase"] %}{{ oidc["crypto_passphrase"] }}{% else %}"exec:/bin/bash -c \"head /dev/urandom | tr -dc A-Za-z0-9 | head -c 32\""{% endif %}
{% endif -%}

{% for location in locations %}
<Location "{{ location }}">
    ProxyPass {{ locations[location]["backend"] }}/
    ProxyPassReverse {{ locations[location]["backend"] }}/

    {% if "mtls" in locations[location] and locations[location]["mtls"] %}
    RequestHeader set X-Remote-User %{SSL_CLIENT_S_DN_CN}e

    SSLOptions +StdEnvVars
    SSLVerifyCLient {{ locations[location]["mtls"] }}
    {% endif %}

    {% if oidc -%}
    AuthType openid-connect
    Require valid-user

    RequestHeader set X-Remote-User %{REMOTE_USER}s
    {% endif %}
</Location>
{% endfor %}
