LoadModule unixd_module modules/mod_unixd.so
LoadModule log_config_module modules/mod_log_config.so

LoadModule rewrite_module modules/mod_rewrite.so
LoadModule headers_module modules/mod_headers.so

LoadModule mpm_event_module modules/mod_mpm_event.so

LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authz_core_module modules/mod_authz_core.so

LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so

{% if ldap -%}
LoadModule ldap_module modules/mod_ldap.so
LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
{% endif -%}

{% if cert -%}
LoadModule ssl_module modules/mod_ssl.so
LoadModule socache_shmcb_module modules/mod_socache_shmcb.so
{% endif %}
{% if oidc -%}
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule auth_openidc_module modules/mod_auth_openidc.so
{% endif %}

ServerName {{ server_name }}
Listen {{ listen }}

UseCanonicalName On

Timeout 10
MaxRequestWorkers 100

{% if debug %}
LogLevel debug
TraceEnable On
{% if oidc -%}
LogLevel auth_openidc:debug
{% endif -%}
{% else %}
LogLevel info
TraceEnable Off
{% endif %}

ErrorLog {{ err_log }}
CustomLog {{ access_log }} common

Mutex posixsem

{% raw %}
ErrorLogFormat "[%{cu}t] [%-m:%-l] %-a %-L %M"
LogFormat "%h %l %u [%{%Y-%m-%d %H:%M:%S}t.%{usec_frac}t] \"%r\" %>s %b \ \"%{Referer}i\" \"%{User-Agent}i\"" combined
{% endraw %}

{% if cert -%}
SSLEngine on
SSLCipherSuite ALL:!EXP:!eNULL:!aNULL:!MD5:-LOW:-RC4:-SSLv2:+HIGH:+MEDIUM
SSLVerifyDepth 5
SSLProtocol all -TLSv1.3
SSLSessionCache "shmcb:/usr/local/apache2/logs/ssl_scache(512000)"
SSLSessionCacheTimeout 300

SSLCACertificateFile {{ ca_cert }}
SSLCertificateFile {{ cert }}
SSLCertificateKeyFile {{ cert_key }}
{% endif %}

{% if oidc -%}
OIDCCryptoPassphrase {% if oidc["CryptoPassphrase"] %}{{ oidc["CryptoPassphrase"] }}{% else %}"exec:/bin/bash -c \"head /dev/urandom | tr -dc A-Za-z0-9 | head -c 32\""{% endif %}
OIDCRedirectURI {% if oidc["RedirectURI"] %}{{ oidc["RedirectURI"] }}{% else %}https://{{ server_name }}/secure/redirect_uri{% endif %}

{% for oidc_key in oidc  -%}
OIDC{{ oidc_key }} {{ oidc[oidc_key] }}
{% endfor %}
{% endif -%}

{% if ldap -%}
{% for key, value in ldap.items()  -%}
LDAP{{ key }} {{ value }}
{% endfor %}
{% endif -%}

{% for path in locations -%}
{% set location = locations[path] -%}
{% set authz = location.get("authz", {}) -%}

{# Setup the required users #}
{% if authz -%}
    {% set authz_required_users = [] -%}
    {% if "users" in authz -%}
        {% set users = authz["users"]|join(" ") -%}
        {% do authz_required_users.append("Require user " ~ users) %}
    {% endif -%}
    {% if "ldap" in authz -%}
        {% for group in authz["ldap"]["groups"] -%}
        {% do authz_required_users.append("Require ldap-group " ~ group) %}
        {% endfor -%}
    {% endif -%}
    {% if not authz_required_users -%}
        {% set authz_required_users = ["Require valid-user"] -%}
    {% endif -%}

    {% set join_type = authz.get("join_type") -%}
    {% if join_type == "any" -%}
        {% do authz_required_users.insert(0, "<RequireAny>") %}
        {% do authz_required_users.append("</RequireAny>") %}
    {% elif join_type == "all" -%}
        {% do authz_required_users.insert(0, "<RequireAll>") %}
        {% do authz_required_users.append("</RequireAll>") %}
    {% endif -%}

    {% set required_users = authz_required_users|join("\n       ") -%}
{% endif %}

<Location "{{ path }}">
    ProxyPass {{ location["backend"] }}
    ProxyPassReverse {{ location["backend"] }}

    {% if "mtls" in location %}
    SSLOptions +StdEnvVars
    SSLUserName SSL_CLIENT_S_DN_CN
    SSLVerifyCLient {{ location["mtls"] }}

    RequestHeader set X-Remote-User %{SSL_CLIENT_S_DN_CN}e
    RequestHeader set X-SSL-certificate "%{SSL_CLIENT_CERT}s" "expr=-n %{SSL_CLIENT_CERT}"
    {% endif %}

    {% if oidc -%}
    AuthType openid-connect
    RequestHeader set X-Remote-User %{REMOTE_USER}s "expr=-n %{REMOTE_USER}"
    {% endif %}

    {% if "ldap" in location["authz"] -%}
    AuthLDAPURL {{ location["authz"]["ldap"]["url"] }}
    AuthLDAPBindDN {{ location["authz"]["ldap"]["bind-dn"] }}
    AuthLDAPBindPassword {{ location["authz"]["ldap"]["bind-pw"] }}
    {% endif %}

    {% if not location["http_methods"] %}
    {{ required_users }}
    {% else -%}
    <Limit {{ location["http_methods"]|join(" ") }}>
        {{ required_users }}
    </Limit>
    {% endif %}
</Location>
{% endfor %}
